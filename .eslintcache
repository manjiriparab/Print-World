[{"C:\\Users\\admin\\Documents\\printpaper-core\\src\\App.js":"1","C:\\Users\\admin\\Documents\\printpaper-core\\src\\AuthRoute.js":"2","C:\\Users\\admin\\Documents\\printpaper-core\\src\\OrderHistory.js":"3","C:\\Users\\admin\\Documents\\printpaper-core\\src\\Demo.js":"4","C:\\Users\\admin\\Documents\\printpaper-core\\src\\dashboard.js":"5","C:\\Users\\admin\\Documents\\printpaper-core\\src\\login.js":"6","C:\\Users\\admin\\Documents\\printpaper-core\\src\\home.js":"7","C:\\Users\\admin\\Documents\\printpaper-core\\src\\Profile.js":"8","C:\\Users\\admin\\Documents\\printpaper-core\\src\\header.js":"9","C:\\Users\\admin\\Documents\\printpaper-core\\src\\UserContext.js":"10"},{"size":1588,"mtime":1626543778714,"results":"11","hashOfConfig":"12"},{"size":417,"mtime":1626543563389,"results":"13","hashOfConfig":"12"},{"size":3193,"mtime":1607698647562,"results":"14","hashOfConfig":"12"},{"size":5366,"mtime":1626543932922,"results":"15","hashOfConfig":"12"},{"size":2521,"mtime":1607424510894,"results":"16","hashOfConfig":"12"},{"size":2884,"mtime":1626610738036,"results":"17","hashOfConfig":"12"},{"size":980,"mtime":1608726909073,"results":"18","hashOfConfig":"12"},{"size":3522,"mtime":1607670930190,"results":"19","hashOfConfig":"12"},{"size":1217,"mtime":1626541820455,"results":"20","hashOfConfig":"12"},{"size":85,"mtime":1607414439967,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"yeor8a",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\admin\\Documents\\printpaper-core\\src\\App.js",[],["49","50"],"C:\\Users\\admin\\Documents\\printpaper-core\\src\\AuthRoute.js",[],["51","52"],"C:\\Users\\admin\\Documents\\printpaper-core\\src\\OrderHistory.js",["53","54"],"import React, {Component} from 'react';\r\nimport Header from './header';\r\nimport Layout from './layout';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nfunction createData(name, p_type, c_type, size, quantity, address, status) {\r\n    return { name, p_type, c_type, size, quantity, address, status };\r\n}\r\n\r\nconst rows = [\r\n    createData('Company Card', 'matte', 'standard', '55x55', '10,000', 'Mumbai', 'pending'),\r\n    createData('Party Card', 'glossy', 'rounded', '90x50','100', 'Goa', 'completed'),\r\n    createData('School Id Card', 'matte', 'standard', '85x55', '600', 'Mumbai', 'pending'),\r\n];\r\n\r\nexport default class OrderHistory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <div className=\"sidebar\">\r\n                    <Layout/>\r\n                </div>\r\n                <div className=\"main\">\r\n                    <h1>Order History</h1>\r\n                <TableContainer component={Paper}>\r\n                    <Table  aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Job Name</TableCell>\r\n                                <TableCell align=\"right\">Paper Type</TableCell>\r\n                                <TableCell align=\"right\">Corners</TableCell>\r\n                                <TableCell align=\"right\">Size</TableCell>\r\n                                <TableCell align=\"right\">Quantity</TableCell>\r\n                                <TableCell align=\"right\">Address</TableCell>\r\n                                <TableCell align=\"right\">Status</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {rows.map((row) => (\r\n                        <TableRow key={row.name}>\r\n                            <TableCell >{row.name}</TableCell>\r\n                            <TableCell align=\"right\">{row.p_type}</TableCell>\r\n                            <TableCell align=\"right\">{row.c_type}</TableCell>\r\n                            <TableCell align=\"right\">{row.size}</TableCell>\r\n                            <TableCell align=\"right\">{row.quantity}</TableCell>\r\n                            <TableCell align=\"right\">{row.address}</TableCell>\r\n                            <TableCell className={row.status} align=\"right\">{row.status}</TableCell>\r\n                        </TableRow>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}",["55","56"],"C:\\Users\\admin\\Documents\\printpaper-core\\src\\Demo.js",[],"C:\\Users\\admin\\Documents\\printpaper-core\\src\\dashboard.js",[],"C:\\Users\\admin\\Documents\\printpaper-core\\src\\login.js",["57","58"],"import React, { useContext, useState} from 'react';\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nimport {UserContext} from './UserContext';\r\n\r\nexport default function Login() {\r\n\r\n    const {user, setUser} = useContext(UserContext);\r\n    const [login, setLogin] = useState({\r\n        email:'manjiri.parab@conspecture.com',\r\n        password:'qwerty123',\r\n    });\r\n    let history = useHistory();\r\n\r\n    function changeAction(e) {\r\n        const {name, value} = e.target;\r\n        setLogin({[name]:value});\r\n    }\r\n    \r\n    function formSubmit(e) {\r\n        e.preventDefault();\r\n        axios\r\n            .post(\"http://localhost/PrintPaperApi/login.php\", login)\r\n            .then(function(response){\r\n    \r\n                if (response.data.s === 1) {\r\n                    localStorage.setItem(\"userdata\", JSON.stringify(response.data.d));\r\n                    setUser(response.data.d);\r\n                    <Redirect push to=\"/home\"/>\r\n                    console.log(\"dffdg\");\r\n                } else {\r\n                    alert(response.data.m);\r\n                }\r\n            })\r\n            .catch(function(error) {\r\n                alert(error);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"login-box\">\r\n                <div className=\"lgbx\">\r\n                    <div className=\"login-header-box\">\r\n                        <NavLink to=\"/\" className=\"tangerine-font-login\">Print World</NavLink>\r\n                    </div>\r\n                    <div className=\"login-form\">\r\n                        <form onSubmit={formSubmit}>\r\n                            <input \r\n                                onChange={changeAction} \r\n                                value={login.email} \r\n                                type=\"text\" \r\n                                name=\"email\" \r\n                                className=\"input-box\" \r\n                                placeholder=\"Email\"\r\n                                required\r\n                            />\r\n                            <input \r\n                                onChange={changeAction} \r\n                                value={login.password} \r\n                                type=\"password\" \r\n                                name=\"password\" \r\n                                className=\"input-box\" \r\n                                placeholder=\"Password\"\r\n                                required\r\n                            />\r\n                            <button type=\"submit\" className=\"login-btn\">Submit</button>\r\n                        </form>\r\n                        <br/><br/>\r\n                        Don't have an account? <NavLink to=\"/\" className=\"signup-link\">Sign up</NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\admin\\Documents\\printpaper-core\\src\\home.js",["59"],"import React, {Component} from 'react';\r\nimport Header from './header';\r\nimport Layout from './layout';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <div className=\"sidebar\">\r\n                    <Layout/>\r\n                </div>\r\n                <div className=\"main\">\r\n                home\r\n                Counter {this.props.ctr}\r\n                <button onClick={this.props.incrementCounter}>Increment Counter</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProp = state => {\r\n    return {\r\n        ctr : state.counter\r\n    }\r\n}\r\n\r\nconst mapDispatchToProp = dispatch => {\r\n    return {\r\n        incrementCounter : () => {\r\n            dispatch({type:'ADD'})\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProp, mapDispatchToProp)(Home)","C:\\Users\\admin\\Documents\\printpaper-core\\src\\Profile.js",["60"],"import React from 'react'\r\nimport Header from './header'\r\nimport Layout from './layout';\r\nimport {Formik, Form , Field, FieldArray} from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nexport default class Profile extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <div className=\"sidebar\">\r\n                    <Layout/>\r\n                </div>\r\n                <div className=\"main\">\r\n                    <h1>Profile</h1>\r\n                    <div className=\"profilediv\">\r\n                        <img className=\"myprofile\" src=\"./pri.jpg\" alt=\"profile\"/>\r\n                        <Formik\r\n                            initialValues={{ \r\n                                first_name: 'Manjiri',\r\n                                last_name: 'Parab',\r\n                                email : 'manjiri.parab@conspecure.com'\r\n                            }}\r\n                            onSubmit={(values, actions) => {\r\n                                setTimeout(() => {\r\n                                    alert(\"Submitted Successfully\");\r\n                                    actions.setSubmitting(false);\r\n                                }, 1000);\r\n                            }}\r\n                            validationSchema={() => Yup.object({\r\n                                first_name: Yup.string()\r\n                                .max(15, 'Must be 15 characters or less')\r\n                                .required('First name is required'),\r\n                                last_name: Yup.string()\r\n                                .max(20, 'Must be 20 characters or less')\r\n                                .required('Last name is required'),\r\n                                email : Yup.string()\r\n                                    .required(\"Email is required\")\r\n                                    .email(\"Email is invalid\")\r\n                            })}\r\n                        >\r\n                            {props => (\r\n                                <Form onKeyDown={this.onKeyDown}>\r\n                                    <div className=\"fieldbox\">\r\n                                        <label><strong>First Name : </strong></label> \r\n                                        <Field type=\"text\" name=\"first_name\"/>\r\n                                        {props.errors.first_name && <span className=\"pending\">{props.errors.first_name}</span>}\r\n                                        <br/>\r\n\r\n                                        <label><strong>Last Name : </strong></label> \r\n                                        <Field type=\"text\" name=\"last_name\"/>\r\n                                        {props.errors.last_name && <span className=\"pending\">{props.errors.last_name}</span>}\r\n\r\n                                        <br/>\r\n                                        <label><strong>Email : </strong></label> \r\n                                        <Field type=\"email\" name=\"email\"/>\r\n                                        {props.errors.email && <span className=\"pending\">{props.errors.email}</span>}\r\n\r\n                                        <br/>\r\n                                        <button className=\"btn btn-info\" type=\"submit\" disabled={props.isSubmitting}>Submit</button>\r\n                                    </div>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\admin\\Documents\\printpaper-core\\src\\header.js",["61"],"C:\\Users\\admin\\Documents\\printpaper-core\\src\\UserContext.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":15,"column":7,"nodeType":"70","messageId":"71","endLine":15,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":33,"column":5,"nodeType":"74","messageId":"75","endLine":36,"endColumn":6},{"ruleId":"62","replacedBy":"76"},{"ruleId":"64","replacedBy":"77"},{"ruleId":"68","severity":1,"message":"78","line":11,"column":12,"nodeType":"70","messageId":"71","endLine":11,"endColumn":16},{"ruleId":"68","severity":1,"message":"79","line":16,"column":9,"nodeType":"70","messageId":"71","endLine":16,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":8,"column":5,"nodeType":"74","messageId":"75","endLine":10,"endColumn":6},{"ruleId":"68","severity":1,"message":"80","line":4,"column":31,"nodeType":"70","messageId":"71","endLine":4,"endColumn":41},{"ruleId":"68","severity":1,"message":"81","line":2,"column":30,"nodeType":"70","messageId":"71","endLine":2,"endColumn":38},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],["82"],["83"],"no-unused-vars","'useStyles' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["82"],["83"],"'user' is assigned a value but never used.","'history' is assigned a value but never used.","'FieldArray' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]